 public static int[] triOpti(int[] tab, int nbMajorant){
        int intervalle = tab.length/2;
        int [] nbValeur = new int [nbMajorant];
        int majg =0;
        int majd =tab.length-1;
        int nbval = 0;
        int pivot =0;
        int grandMaj ;
        int direction = 0;//0 gauche, 1 droite

        for (int i = nbval; i < intervalle; i++)
            if (tab[i] > tab[majg]) majg = i;
        for (int j = intervalle + 1; j < tab.length; j++)
            if (tab[j] > tab[majd]) majd = j;

        while(nbval<nbMajorant) {
            if(tab[majd] > tab[majg]) {
                direction = 1;
                grandMaj = majd;
            }else {
                direction = 0;
                grandMaj = majg;
            }

            nbValeur[nbval] = tab[grandMaj];
            nbval++;
            pivot =  tab[grandMaj];
            tab[grandMaj]  = tab[nbval];
            tab[nbval] = pivot;

            if(direction==1 && tab[grandMaj] == tab[majg])
                for (int i = nbval; i < intervalle; i++)
                    if (tab[i] > tab[majg]) majg = i;

            if(nbval<nbMajorant)
                if (direction == 0)
                    for (int i = nbval; i < intervalle; i++)
                        if (tab[i] > tab[majg]) majg = i;
                else
                    for (int j = intervalle + 1; j < tab.length; j++)
                        if (tab[j] > tab[majd]) majd = j;

        }
        return tab;
    }


}
